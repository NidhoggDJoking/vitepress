import{_ as e,o as t,c as l,a as i}from"./app.803988e9.js";const o="/vitepress/assets/dimensions-client.206992b8.png",c="/vitepress/assets/scrollheight.1dd5d7f8.png",f=JSON.parse('{"title":"Layout","description":"","frontmatter":{"outline":"deep"},"headers":[{"level":2,"title":"Element","slug":"element","link":"#element","children":[{"level":3,"title":"clientHeight","slug":"clientheight","link":"#clientheight","children":[]},{"level":3,"title":"scrollHeight","slug":"scrollheight","link":"#scrollheight","children":[]}]},{"level":2,"title":"HTMLElement","slug":"htmlelement","link":"#htmlelement","children":[]}],"relativePath":"note/layout.md","lastUpdated":1700356505000}'),a={name:"note/layout.md"},n=i('<h1 id="layout" tabindex="-1">Layout <a class="header-anchor" href="#layout" aria-hidden="true">#</a></h1><h2 id="element" tabindex="-1">Element <a class="header-anchor" href="#element" aria-hidden="true">#</a></h2><h3 id="clientheight" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/clientHeight" target="_blank" rel="noreferrer">clientHeight</a> <a class="header-anchor" href="#clientheight" aria-hidden="true">#</a></h3><p>只读属性 <code>Element.clientHeight</code> 对于没有定义 CSS 或者内联布局盒子的元素为 0；否则，它是元素内部的高度（以像素为单位），包含内边距，但不包括边框、外边距和水平滚动条（如果存在）。</p><p><code>clientHeight</code> 可以通过 CSS <code>height</code> + CSS <code>padding</code> - 水平滚动条高度（如果存在）来计算。</p><p>在根元素（<code>&lt;html&gt;</code> 元素）或怪异模式下的 <code>&lt;body&gt;</code> 元素上使用 clientHeight 时，该属性将返回视口高度（不包含任何滚动条）。</p><p><img src="'+o+'" alt="dimensions-client"></p><h3 id="scrollheight" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollHeight" target="_blank" rel="noreferrer">scrollHeight</a> <a class="header-anchor" href="#scrollheight" aria-hidden="true">#</a></h3><p><code>Element.scrollHeight</code> 只读属性是一个元素内容高度的度量，包括由于溢出导致的视图中不可见内容。</p><p><img src="'+c+'" alt="scrollheight"></p><p><code>scrollHeight</code> 的值等于该元素在不使用滚动条的情况下为了适应视口中所用内容所需的最小高度。高度的度量方式与 <code>clientHeight</code> 相同：包括元素的内边距，但不包括元素的边框、外边距以及水平滚动条（如果存在）。它也包括 <code>::before</code> 和 <code>::after</code> 这样的伪元素的高度。如果元素的内容不需要垂直滚动条就可以容纳，则其 <code>scrollHeight</code> 等于 <code>clientHeight</code>。</p><h2 id="htmlelement" tabindex="-1">HTMLElement <a class="header-anchor" href="#htmlelement" aria-hidden="true">#</a></h2>',12),h=[n];function r(d,s,g,p,m,_){return t(),l("div",null,h)}const H=e(a,[["render",r]]);export{f as __pageData,H as default};
